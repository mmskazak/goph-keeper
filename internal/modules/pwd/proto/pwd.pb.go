// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: pwd.proto

package proto

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Общий ответ для операций, которые не возвращают данные
type BasicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BasicResponse) Reset() {
	*x = BasicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pwd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicResponse) ProtoMessage() {}

func (x *BasicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pwd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicResponse.ProtoReflect.Descriptor instead.
func (*BasicResponse) Descriptor() ([]byte, []int) {
	return file_pwd_proto_rawDescGZIP(), []int{0}
}

// Запрос на сохранение пароля
type SavePwdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jwt         *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
	Title       *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Credentials *Credentials            `protobuf:"bytes,4,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *SavePwdRequest) Reset() {
	*x = SavePwdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pwd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavePwdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavePwdRequest) ProtoMessage() {}

func (x *SavePwdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pwd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavePwdRequest.ProtoReflect.Descriptor instead.
func (*SavePwdRequest) Descriptor() ([]byte, []int) {
	return file_pwd_proto_rawDescGZIP(), []int{1}
}

func (x *SavePwdRequest) GetJwt() *wrapperspb.StringValue {
	if x != nil {
		return x.Jwt
	}
	return nil
}

func (x *SavePwdRequest) GetTitle() *wrapperspb.StringValue {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *SavePwdRequest) GetCredentials() *Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

// Запрос на обновление пароля
type UpdatePwdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jwt         *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
	PwdId       *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=pwd_id,json=pwdId,proto3" json:"pwd_id,omitempty"`
	Title       *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Credentials *Credentials            `protobuf:"bytes,5,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *UpdatePwdRequest) Reset() {
	*x = UpdatePwdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pwd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePwdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePwdRequest) ProtoMessage() {}

func (x *UpdatePwdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pwd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePwdRequest.ProtoReflect.Descriptor instead.
func (*UpdatePwdRequest) Descriptor() ([]byte, []int) {
	return file_pwd_proto_rawDescGZIP(), []int{2}
}

func (x *UpdatePwdRequest) GetJwt() *wrapperspb.StringValue {
	if x != nil {
		return x.Jwt
	}
	return nil
}

func (x *UpdatePwdRequest) GetPwdId() *wrapperspb.StringValue {
	if x != nil {
		return x.PwdId
	}
	return nil
}

func (x *UpdatePwdRequest) GetTitle() *wrapperspb.StringValue {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *UpdatePwdRequest) GetCredentials() *Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

// Запрос на удаление пароля
type DeletePwdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jwt   *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
	PwdId *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=pwd_id,json=pwdId,proto3" json:"pwd_id,omitempty"`
}

func (x *DeletePwdRequest) Reset() {
	*x = DeletePwdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pwd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePwdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePwdRequest) ProtoMessage() {}

func (x *DeletePwdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pwd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePwdRequest.ProtoReflect.Descriptor instead.
func (*DeletePwdRequest) Descriptor() ([]byte, []int) {
	return file_pwd_proto_rawDescGZIP(), []int{3}
}

func (x *DeletePwdRequest) GetJwt() *wrapperspb.StringValue {
	if x != nil {
		return x.Jwt
	}
	return nil
}

func (x *DeletePwdRequest) GetPwdId() *wrapperspb.StringValue {
	if x != nil {
		return x.PwdId
	}
	return nil
}

// Запрос на получение пароля
type GetPwdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jwt   *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
	PwdId *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=pwd_id,json=pwdId,proto3" json:"pwd_id,omitempty"`
}

func (x *GetPwdRequest) Reset() {
	*x = GetPwdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pwd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPwdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPwdRequest) ProtoMessage() {}

func (x *GetPwdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pwd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPwdRequest.ProtoReflect.Descriptor instead.
func (*GetPwdRequest) Descriptor() ([]byte, []int) {
	return file_pwd_proto_rawDescGZIP(), []int{4}
}

func (x *GetPwdRequest) GetJwt() *wrapperspb.StringValue {
	if x != nil {
		return x.Jwt
	}
	return nil
}

func (x *GetPwdRequest) GetPwdId() *wrapperspb.StringValue {
	if x != nil {
		return x.PwdId
	}
	return nil
}

// Запрос на получение всех паролей
type AllPwdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jwt *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *AllPwdRequest) Reset() {
	*x = AllPwdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pwd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllPwdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllPwdRequest) ProtoMessage() {}

func (x *AllPwdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pwd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllPwdRequest.ProtoReflect.Descriptor instead.
func (*AllPwdRequest) Descriptor() ([]byte, []int) {
	return file_pwd_proto_rawDescGZIP(), []int{5}
}

func (x *AllPwdRequest) GetJwt() *wrapperspb.StringValue {
	if x != nil {
		return x.Jwt
	}
	return nil
}

// Ответ с информацией о пароле
type PwdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PwdId       *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=pwd_id,json=pwdId,proto3" json:"pwd_id,omitempty"` // Идентификатор пароля
	Title       *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Credentials *Credentials            `protobuf:"bytes,4,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *PwdResponse) Reset() {
	*x = PwdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pwd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PwdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PwdResponse) ProtoMessage() {}

func (x *PwdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pwd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PwdResponse.ProtoReflect.Descriptor instead.
func (*PwdResponse) Descriptor() ([]byte, []int) {
	return file_pwd_proto_rawDescGZIP(), []int{6}
}

func (x *PwdResponse) GetPwdId() *wrapperspb.StringValue {
	if x != nil {
		return x.PwdId
	}
	return nil
}

func (x *PwdResponse) GetTitle() *wrapperspb.StringValue {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *PwdResponse) GetCredentials() *Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

// Ответ на запрос всех паролей
type AllPwdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passwords []*PwdResponse `protobuf:"bytes,1,rep,name=passwords,proto3" json:"passwords,omitempty"` // Список паролей пользователя
}

func (x *AllPwdResponse) Reset() {
	*x = AllPwdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pwd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllPwdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllPwdResponse) ProtoMessage() {}

func (x *AllPwdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pwd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllPwdResponse.ProtoReflect.Descriptor instead.
func (*AllPwdResponse) Descriptor() ([]byte, []int) {
	return file_pwd_proto_rawDescGZIP(), []int{7}
}

func (x *AllPwdResponse) GetPasswords() []*PwdResponse {
	if x != nil {
		return x.Passwords
	}
	return nil
}

// Определение структуры учетных данных
type Credentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Login    *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Password *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pwd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_pwd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_pwd_proto_rawDescGZIP(), []int{8}
}

func (x *Credentials) GetLogin() *wrapperspb.StringValue {
	if x != nil {
		return x.Login
	}
	return nil
}

func (x *Credentials) GetPassword() *wrapperspb.StringValue {
	if x != nil {
		return x.Password
	}
	return nil
}

var File_pwd_proto protoreflect.FileDescriptor

var file_pwd_proto_rawDesc = []byte{
	0x0a, 0x09, 0x70, 0x77, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x77, 0x64,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x0f, 0x0a, 0x0d, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xa8, 0x01, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x03, 0x6a, 0x77, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x77, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0xdf, 0x01, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x6a, 0x77,
	0x74, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x77, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x70, 0x77, 0x64, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x77, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x77,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x6a,
	0x77, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x77, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x70, 0x77, 0x64, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x77,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x77, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x70, 0x77, 0x64, 0x49, 0x64, 0x22, 0x3f, 0x0a,
	0x0d, 0x41, 0x6c, 0x6c, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x22, 0xaa,
	0x01, 0x0a, 0x0b, 0x50, 0x77, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x06, 0x70, 0x77, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x70, 0x77,
	0x64, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x77, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x40, 0x0a, 0x0e, 0x41,
	0x6c, 0x6c, 0x50, 0x77, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x09, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x77, 0x64, 0x2e, 0x50, 0x77, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x7b, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x05,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x38, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x32, 0xb5, 0x02, 0x0a, 0x0f, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37,
	0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x13,
	0x2e, 0x70, 0x77, 0x64, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x77, 0x64, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x77, 0x64, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x70, 0x77, 0x64, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x77, 0x64, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x70, 0x77, 0x64, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x12, 0x2e, 0x70, 0x77, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x77, 0x64, 0x2e, 0x50, 0x77, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x77, 0x64, 0x2e,
	0x41, 0x6c, 0x6c, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x70, 0x77, 0x64, 0x2e, 0x41, 0x6c, 0x6c, 0x50, 0x77, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pwd_proto_rawDescOnce sync.Once
	file_pwd_proto_rawDescData = file_pwd_proto_rawDesc
)

func file_pwd_proto_rawDescGZIP() []byte {
	file_pwd_proto_rawDescOnce.Do(func() {
		file_pwd_proto_rawDescData = protoimpl.X.CompressGZIP(file_pwd_proto_rawDescData)
	})
	return file_pwd_proto_rawDescData
}

var file_pwd_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pwd_proto_goTypes = []any{
	(*BasicResponse)(nil),          // 0: pwd.BasicResponse
	(*SavePwdRequest)(nil),         // 1: pwd.SavePwdRequest
	(*UpdatePwdRequest)(nil),       // 2: pwd.UpdatePwdRequest
	(*DeletePwdRequest)(nil),       // 3: pwd.DeletePwdRequest
	(*GetPwdRequest)(nil),          // 4: pwd.GetPwdRequest
	(*AllPwdRequest)(nil),          // 5: pwd.AllPwdRequest
	(*PwdResponse)(nil),            // 6: pwd.PwdResponse
	(*AllPwdResponse)(nil),         // 7: pwd.AllPwdResponse
	(*Credentials)(nil),            // 8: pwd.Credentials
	(*wrapperspb.StringValue)(nil), // 9: google.protobuf.StringValue
}
var file_pwd_proto_depIdxs = []int32{
	9,  // 0: pwd.SavePwdRequest.jwt:type_name -> google.protobuf.StringValue
	9,  // 1: pwd.SavePwdRequest.title:type_name -> google.protobuf.StringValue
	8,  // 2: pwd.SavePwdRequest.credentials:type_name -> pwd.Credentials
	9,  // 3: pwd.UpdatePwdRequest.jwt:type_name -> google.protobuf.StringValue
	9,  // 4: pwd.UpdatePwdRequest.pwd_id:type_name -> google.protobuf.StringValue
	9,  // 5: pwd.UpdatePwdRequest.title:type_name -> google.protobuf.StringValue
	8,  // 6: pwd.UpdatePwdRequest.credentials:type_name -> pwd.Credentials
	9,  // 7: pwd.DeletePwdRequest.jwt:type_name -> google.protobuf.StringValue
	9,  // 8: pwd.DeletePwdRequest.pwd_id:type_name -> google.protobuf.StringValue
	9,  // 9: pwd.GetPwdRequest.jwt:type_name -> google.protobuf.StringValue
	9,  // 10: pwd.GetPwdRequest.pwd_id:type_name -> google.protobuf.StringValue
	9,  // 11: pwd.AllPwdRequest.jwt:type_name -> google.protobuf.StringValue
	9,  // 12: pwd.PwdResponse.pwd_id:type_name -> google.protobuf.StringValue
	9,  // 13: pwd.PwdResponse.title:type_name -> google.protobuf.StringValue
	8,  // 14: pwd.PwdResponse.credentials:type_name -> pwd.Credentials
	6,  // 15: pwd.AllPwdResponse.passwords:type_name -> pwd.PwdResponse
	9,  // 16: pwd.Credentials.login:type_name -> google.protobuf.StringValue
	9,  // 17: pwd.Credentials.password:type_name -> google.protobuf.StringValue
	1,  // 18: pwd.PasswordService.SavePassword:input_type -> pwd.SavePwdRequest
	2,  // 19: pwd.PasswordService.UpdatePassword:input_type -> pwd.UpdatePwdRequest
	3,  // 20: pwd.PasswordService.DeletePassword:input_type -> pwd.DeletePwdRequest
	4,  // 21: pwd.PasswordService.GetPassword:input_type -> pwd.GetPwdRequest
	5,  // 22: pwd.PasswordService.GetAllPasswords:input_type -> pwd.AllPwdRequest
	0,  // 23: pwd.PasswordService.SavePassword:output_type -> pwd.BasicResponse
	0,  // 24: pwd.PasswordService.UpdatePassword:output_type -> pwd.BasicResponse
	0,  // 25: pwd.PasswordService.DeletePassword:output_type -> pwd.BasicResponse
	6,  // 26: pwd.PasswordService.GetPassword:output_type -> pwd.PwdResponse
	7,  // 27: pwd.PasswordService.GetAllPasswords:output_type -> pwd.AllPwdResponse
	23, // [23:28] is the sub-list for method output_type
	18, // [18:23] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_pwd_proto_init() }
func file_pwd_proto_init() {
	if File_pwd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pwd_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BasicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pwd_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SavePwdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pwd_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePwdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pwd_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DeletePwdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pwd_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetPwdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pwd_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AllPwdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pwd_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PwdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pwd_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AllPwdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pwd_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Credentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pwd_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pwd_proto_goTypes,
		DependencyIndexes: file_pwd_proto_depIdxs,
		MessageInfos:      file_pwd_proto_msgTypes,
	}.Build()
	File_pwd_proto = out.File
	file_pwd_proto_rawDesc = nil
	file_pwd_proto_goTypes = nil
	file_pwd_proto_depIdxs = nil
}
